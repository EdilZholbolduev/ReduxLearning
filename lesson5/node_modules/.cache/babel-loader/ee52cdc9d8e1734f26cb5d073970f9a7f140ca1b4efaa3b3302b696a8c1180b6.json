{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst mathSlice = createSlice({\n  name: \"mathSlice\",\n  initialState: {\n    input1: \"\",\n    input2: \"\",\n    result: 0\n  },\n  reducers: {\n    firstInput: (state, action) => {\n      state.input1 = parseInt(action.payload, 10) || 0;\n    },\n    secondInput: (state, action) => {\n      state.input2 = parseInt(action.payload, 10) || 0;\n    },\n    addNumbers: (state, action) => {\n      const {\n        num1,\n        num2\n      } = action.payload;\n      state.result = num1 + num2;\n    },\n    subtractNumbers: (state, action) => {\n      const {\n        num1,\n        num2\n      } = action.payload;\n      state.result = num1 - num2;\n    },\n    multiplyNumbers: (state, action) => {\n      const {\n        num1,\n        num2\n      } = action.payload;\n      state.result = num1 * num2;\n    },\n    divideNumbers: (state, action) => {\n      const {\n        num1,\n        num2\n      } = action.payload;\n      state.result = num1 / num2;\n    },\n    cleanInputs: (state, action) => {\n      state.input1 = '', state.input2 = '';\n    }\n  }\n});\nexport const {\n  firstInput,\n  secondInput,\n  addNumbers,\n  subtractNumbers,\n  multiplyNumbers,\n  divideNumbers\n} = mathSlice.actions;\nexport default mathSlice.reducer;","map":{"version":3,"names":["createSlice","mathSlice","name","initialState","input1","input2","result","reducers","firstInput","state","action","parseInt","payload","secondInput","addNumbers","num1","num2","subtractNumbers","multiplyNumbers","divideNumbers","cleanInputs","actions","reducer"],"sources":["D:/Desktop/FRONTEND/Geeks/reduxLearning/lesson5/src/store/mathSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst mathSlice = createSlice({\r\n  name: \"mathSlice\",\r\n  initialState: {\r\n    input1: \"\",\r\n    input2: \"\",\r\n    result: 0,\r\n  },\r\n  reducers: {\r\n    firstInput: (state, action) => {\r\n      state.input1 = parseInt(action.payload, 10) || 0;\r\n    },\r\n    secondInput: (state, action) => {\r\n      state.input2 = parseInt(action.payload, 10) || 0 ;\r\n    },\r\n    addNumbers: (state, action) => {\r\n      const { num1, num2 } = action.payload;\r\n      state.result = num1 + num2;\r\n    },\r\n    subtractNumbers: (state, action) => {\r\n      const { num1, num2 } = action.payload;\r\n      state.result = num1 - num2;\r\n    },\r\n    multiplyNumbers: (state, action) => {\r\n      const { num1, num2 } = action.payload;\r\n      state.result = num1 * num2;\r\n    },\r\n    divideNumbers: (state, action) => {\r\n      const { num1, num2 } = action.payload;\r\n      state.result = num1 / num2;\r\n    },\r\n    cleanInputs:(state,action)=>{\r\n      state.input1 = '',\r\n      state.input2 = ''\r\n    }\r\n  },\r\n});\r\n\r\nexport const { firstInput, secondInput, addNumbers, subtractNumbers, multiplyNumbers, divideNumbers } =\r\n  mathSlice.actions;\r\n\r\nexport default mathSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,MAAM,GAAGO,QAAQ,CAACD,MAAM,CAACE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC;IAClD,CAAC;IACDC,WAAW,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACJ,MAAM,GAAGM,QAAQ,CAACD,MAAM,CAACE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC;IAClD,CAAC;IACDE,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEK,IAAI;QAAEC;MAAK,CAAC,GAAGN,MAAM,CAACE,OAAO;MACrCH,KAAK,CAACH,MAAM,GAAGS,IAAI,GAAGC,IAAI;IAC5B,CAAC;IACDC,eAAe,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAM;QAAEK,IAAI;QAAEC;MAAK,CAAC,GAAGN,MAAM,CAACE,OAAO;MACrCH,KAAK,CAACH,MAAM,GAAGS,IAAI,GAAGC,IAAI;IAC5B,CAAC;IACDE,eAAe,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAM;QAAEK,IAAI;QAAEC;MAAK,CAAC,GAAGN,MAAM,CAACE,OAAO;MACrCH,KAAK,CAACH,MAAM,GAAGS,IAAI,GAAGC,IAAI;IAC5B,CAAC;IACDG,aAAa,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAAEK,IAAI;QAAEC;MAAK,CAAC,GAAGN,MAAM,CAACE,OAAO;MACrCH,KAAK,CAACH,MAAM,GAAGS,IAAI,GAAGC,IAAI;IAC5B,CAAC;IACDI,WAAW,EAACA,CAACX,KAAK,EAACC,MAAM,KAAG;MAC1BD,KAAK,CAACL,MAAM,GAAG,EAAE,EACjBK,KAAK,CAACJ,MAAM,GAAG,EAAE;IACnB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,UAAU;EAAEK,WAAW;EAAEC,UAAU;EAAEG,eAAe;EAAEC,eAAe;EAAEC;AAAc,CAAC,GACnGlB,SAAS,CAACoB,OAAO;AAEnB,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}